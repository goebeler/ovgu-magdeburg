%% @author Tsvetan Dimitrov <tsvetan.dimitrov23@gmail.com>
%% @doc 

-module(pyTriple).
-export([pyTriple/1]).

% get all possible Pythagorean triples
pyTriple(N) -> [{X, Y, Z} ||
                X <- take(N, ints_from(2)),
                Y <- take(N, ints_from(X + 1)),
                Z <- take(N, ints_from(Y + 1)),

                X * X + Y * Y == Z * Z].


% generate sequential integers starting from N
ints_from(N) ->
    fun() -> [N | ints_from(N + 1)] end.

% take Nth element of endless list generated by
% applying a Lazy function
take(N, Lazy) ->
    if
        N == 0 -> [];
        true -> [hd(Lazy()) | take(N - 1, tl(Lazy()))]
    end.

